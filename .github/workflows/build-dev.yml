# This creates docker image for the most recent commit to the repository
# The docker image is intended for development purposes
# 
name: build-dev

on:
  push

env:
  # Auscope-Portal-API docker image name
  IMAGE_NAME: auscope-portal-api

jobs:
  # Push image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Checkout portal-core
        uses: actions/checkout@v2.3.4
        with:
          repository: AuScope/portal-core
          ref: master
          path: portal-core
      - name: Build portal-core 
        run: |
          cd portal-core
          mvn clean install
      - name: Build with Maven, then with docker 
        run: |
          mvn -B package --file pom.xml
          docker build . --file Dockerfile.github --tag $IMAGE_NAME
          
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to repository only if its the master branch
        if: contains(github.ref, 'master')
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Always the latest version
          VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
      - name: Upload war file artifact
        uses: actions/upload-artifact@v2
        with:
          name: auscope-portal-api war file
          path: target/auscope-portal-api-6.2.0-SNAPSHOT.war
