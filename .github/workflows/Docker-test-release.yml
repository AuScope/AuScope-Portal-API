# Create builds for testing releases
name: Docker-test-release


on:
  push:
    # Publish `RELEASE-*` as Docker `latest` test image.
    branches:
      - RELEASE-*

env:
  IMAGE_NAME: auscope-portal-api-test-release

jobs:
  # Push image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.14
        uses: actions/setup-java@v1
        with:
          java-version: 1.14
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven, then with docker 
        run: |
          mvn -B package --file pom.xml
          ls -lR target
          docker build . --file Dockerfile.github --tag $IMAGE_NAME
          
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Always the latest version
          VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
